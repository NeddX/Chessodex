#+author: Neddiendrohu
#+title: Chessodex

* Overview
Welcome to Chessodex - a chess implementation built using the Codex2D custom game engine made also by me. This project showcases the capabilities of Codex2D, a custom 2D cross-platform game engine written in C++ with OpenGL. The engine provides features such as sprite rendering, Entity-Component-System (ECS) architecture, serialization, GUI with ImGUI, and native C++ scripting.
The chess implementation is very straight forward and follows the basic chess rules. You can drag and drop the pieces and on each move made, the turn changes.
It also allows for customization and the ability to load FEN strings.

* Features
- Chess implementation with basic chess rules.
- Customizable chess scenarios using FEN strings.
- Tile color customization for a personalized experience.
- Cross-platform support.

* Prerequisites for building from source
Before building the project, ensure you have the following tools installed:

- CMake 3.20 or higher
- Clang 16 or higher (or GCC 13 or higher)
- Ninja 1.11 or higher
- Visual Studio 17 or higher (for Windows, with CMake and Ninja components installed)

** Building the Project
*** Unix like (Linux, OSX, FreeBSD...)
1. Clone the repo with:
#+begin_src bash
git clone --recursive https://github.com/NeddX/Chessodex
#+end_src

2. Run the provided Python script to list available presets:
#+begin_src bash
./build.py list
#+end_src

3. Choose a preset from the list.
    - Available presets:
        1. =debug=: For debugging. Installs the game under =installs/<os>-<arch>-debug= folder inside the project root folder.
        2. =release=: Minimal debug information. Installs the game under =installs/<os>-<arch>-release= folder inside the project root folder.
        3. =shipping=: For packaging. Installs the game under =/usr/local= (On Unix like systems) or =C:/Program Files (x86)= on Windows.

    - An example preset would be:
      #+begin_src bash
      ./build.py --preset=linux-x86_64-debug
      #+end_src

4. Build the project using the selected preset:
#+begin_src bash
./build.py --preset=<preset name>
#+end_src

**** Ubuntu 23.10 mantic (or Ubuntu based)
On Ubuntu, you will first need the following packages installed:
#+begin_src bash
sudo apt install python3 git cmake clang libglu1-mesa-dev libxext-dev libasound2-dev build-essential -y
#+end_src

**** Arch (or Arch based)
On Arch, you will first need the following packages installed:
#+begin_src bash
sudo pacamn -S python3 git cmake clang mesa base-devel --noconfirm
#+end_src

*** Windows
Open the root =CMakeLists.txt= file in Visual Studio, select the preset from the top centre
and build.
For installation click on =Install Chessodex= under =build=.

** Installation
*** Unix like (Linux, OSX, FreeBSD...)
On Unix like systems run the =build.py= script with the =shipping= preset which will install the
game under =/usr/local=.
For example to install on an AMD64 Linux system you would do:
#+begin_src bash
./build.py --preset=linux-x86_64-shipping --install
#+end_src

For uninstallation, CMake generates an =install_manifest.txt= file under the =builds/<selected preset>= folder which contains all the files and folders that have been installed so you can do:
#+begin_src bash
sudo xargs rm < install_manifest.txt
#+end_src

You might also want to delete the folders assosicated with Chessodex under =~/.config/= folder.

*** Windows
To install on Windows, just select the =shipping= preset in Visual Studio and hit the =Install Chessodex= under =Build=, this will install the game under =C:/Program Files (x86)/Chessodex=.

For uninstallation on Windows, just delete the folder =C:/Program Files (x86)/Chessodex=.
You migth also want to delete the folders assosicated with Chessodex under =%LOCALAPPDATA%=.

** Usage
After building and installing the project, you can run the Chessodex.
You can drag and drop the pieces and on every turn made, the turn changes.
